set nocompatible
filetype off
syntax on
set exrc
set number
set relativenumber
set visualbell
set backspace=indent,eol,start

set directory=~/.vim/swapfiles//

set rtp+=/usr/local/opt/fzf
set rtp+=~/.fzf

let g:python3_host_prog = '/usr/local/bin/python3'

call plug#begin('~/.vim/bundle')

Plug 'mattn/emmet-vim'
function! HtmlExpander()
    let line   = getline(".")
    let col    = col(".")
    let first  = line[col-2]
    let second = line[col-1]
    let third  = line[col]

    if first ==# ">"
        if second ==# "<" && third ==# "/"
            return "\<CR>\<C-o>==\<C-o>O"

        else
            return "\<CR>"

        endif

    else
        return "\<CR>"
    endif
endfunction
autocmd Filetype html inoremap <buffer> <expr> <CR> HtmlExpander()
autocmd FileType cs set omnifunc=OmniSharp#Complete

Plug 'tpope/vim-dispatch'
if has('nvim')
  Plug 'Shougo/deoplete.nvim', { 'do': ':UpdateRemotePlugins' }
else
  Plug 'Shougo/deoplete.nvim'
  Plug 'roxma/nvim-yarp'
  Plug 'roxma/vim-hug-neovim-rpc'
endif
let g:deoplete#enable_at_startup = 1
Plug 'deoplete-plugins/deoplete-jedi'
" <TAB> completion
inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"

Plug 'jiangmiao/auto-pairs'
let g:AutoPairsMapSpace = 0
Plug 'scrooloose/nerdtree'
map <c-g> :NERDTreeToggle<CR>
Plug 'junegunn/fzf.vim'
nmap <c-space> :FZF<CR>
nmap <c-@> <c-space>

Plug 'tpope/vim-surround'
Plug 'tpope/vim-unimpaired'
Plug 'leafgarland/typescript-vim'
Plug 'Quramy/vim-js-pretty-template'
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
let g:jsx_ext_required = 0
Plug 'Shougo/vimproc.vim', { 'do': 'make' }
Plug 'Quramy/tsuquyomi'
Plug 'ianks/vim-tsx'
Plug 'derekwyatt/vim-scala'
let g:typescript_compiler_binary = 'tsc'
let g:typescript_compiler_options = ''

let g:tsuquyomi_disable_quickfix = 1

let g:ale_completion_enabled = 0
let g:ale_linters = {
\       'javascript': ['eslint', 'flow', 'flow-language-server']
\}
let g:ale_fixers = {
\   'javascript': ['prettier'],
\   'typescript': ['prettier'],
\   'css': ['prettier'],
\}
Plug 'w0rp/ale'

Plug 'Vimjas/vim-python-pep8-indent'
let g:pymode_indent = 0
Plug 'tomasiser/vim-code-dark'
set t_Co=256
set t_ut=

call plug#end()
filetype plugin indent on

set tabstop=8 softtabstop=0 expandtab shiftwidth=4 smarttab autoindent

silent! colorscheme codedark
highlight Comment cterm=italic
autocmd QuickFixCmdPost [^l]* nested cwindow
autocmd QuickFixCmdPost    l* nested lwindow

hi MatchParen cterm=bold ctermbg=none ctermfg=none
hi MatchParen term=underline cterm=underline gui=underline

autocmd FileType c,cpp,java,scala,js,ts,jsx,tsx,py,html,xml,json,cs,fs autocmd BufWritePre <buffer> %s/\s\+$//e
set completeopt=menuone,preview,noselect
let $NVIM_PYTHON_LOG_FILE="/tmp/nvim_log"
let $NVIM_PYTHON_LOG_LEVEL="DEBUG"
